#include "vase.hpp"
#include <random>



vase::vase(int template_idx) {
    // initializee template_idx
    if (template_idx == 0) {
        vase_ = stamnos;
    } else if (template_idx == 1) {
        vase_ = amphora;
    } else if (template_idx == 2) {
        vase_ = kalathos;
    } else {
        throw std::runtime_error("template idx out of bound");
    }

}




// void vase::addShiny(int num_shiny, string shiny) {








//     // if(vase_2d == stamnos) {

//     // }
//     // if(vase_2d == kalathos) {
//     //     int col = rand() % 12 + 7; //columns that are inside the container, maybe make a function to find which columns are inside container
//     //     for(int num = 0; num < num_shiny; num++) {
//     //         for(size_t row = kalathos.size() - 1; row >=0 && kalathos[row][col] == " "; row--) {
//     //             kalathos[row + 1][col] = shiny;
//     //             kalathos[row][col] = " ";
//     //         }
//     //     }
//     // }
// }






// int vase::VaseOpeningWidth() {
//     for (size_t row = 0; row < 20; row++) {
//         if 
//     }
// }









const vector<string> vase::stamnos = 
{
    {"                                        "},
    {"                                        "},
    {"                                        "},
    {"                                        "},
    {"                                        "},
    {"                                        "},
    {"                                        "},
    {"                                        "},
    {"                                        "},
    {"                                        "},
    {"                                        "},
    {"           ⎛_             _⎞            "},
    {"           __|           |__            "},
    {"          ⎛                 ⎞           "},
    {"       ⎛‾‾                   ‾‾⎞        "},
    {"        ‾‾⎝                 ⎠‾‾         "},
    {"           \               /            "},
    {"             \___      ___/             "},
    {"                ⎛      ⎞                "},
    {"                 ‾‾‾‾‾‾                 "}
};



    //    {{" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
    //     {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
    //     {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
    //     {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
    //     {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
    //     {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
    //     {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
    //     {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
    //     {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
    //     {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},

    //     {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},    
    //     {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "⎛", "_", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "_", "⎞", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, 
    //     {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "_", "_", "|", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "|", "_", "_", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}, 
    //     {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "⎛", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "⎞", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
    //     {" ", " ", " ", " ", " ", " ", " ", " ", "⎛", "‾", "‾", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "‾", "‾", "⎞", " ", " ", " ", " ", " ", " ", " "},
    //     {" ", " ", " ", " ", " ", " ", " ", " ", " ", "‾", "‾", "⎝", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "⎠", "‾", "‾", " ", " ", " ", " ", " ", " ", " ", " "},
    //     {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ","\\", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "/", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
    //     {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "\\","_", "_", "_", " ", " ", " ", " ", " ", " ", " ", "_", "_", "_", "/", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
    //     {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "⎛", " ", " ", " ", " ", " ", " ", " ", "⎞", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
    //     {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "‾", "‾", "‾", "‾", "‾", "‾", "‾", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
    //     };

// to be drawn (note: have to be a closed vase)
const vector<string> vase::amphora = 
        {{}};

// to be drawn (note: have to be a closed vase)
const vector<string> vase::kalathos = 
        {{}};

// vector<vector<string>> vase::kalathos = 
//         {{}};
// string row1 = "___                     ___";
    
// string row2 = "   ⎞                  ⎛   ";

// string row3 = "    ⎞                ⎛    ";

// string row4 = "     ⎞              ⎛     ";
// string row5 = "      |             |      ";
// string row6 = "      |             |      ";
// string row7 = "      |             |      ";

// string row8 = "      ⎞             ⎛     ";
// string row9 = "      _⎛___________⎞_     ";
// std::vector<std::string> rows = {row1, row2, row3, row4, row5, row6, row7, row8, row9};

// for (auto row : rows) {
//     vector<string> vectorrow;
//     for(size_t col = 0; col < row.length(); col++) {
//         string c;
//         c.push_back(row[col]);
//         vectorrow.push_back(c);
//     }
//     kalathos.push_back(vectorrow);
// }


